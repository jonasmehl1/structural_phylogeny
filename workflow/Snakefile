# Overall this snakemake file is a modified version of the original one, which keeps the relevant steps but gets rid of the non applicable stuff (Astral and Notung support, blast vs foldseek and much more).

import glob
import pandas as pd
import snakemake.utils

# Load fixed config parameters
configfile: "config/params.yaml"

# get the input directory
input_dir = config["input_dir"]
output_dir = config["outdir"]
combinations_ML = config["combinations_ML"]

# Here only the rule make_fastas that exctracts the fast sequence from pdb file is of interest
# include: 'rules/prepare.smk'
# This contains the rules for foldseek
include: 'rules/structure.smk'
# This constructs blast databases used for searching, unclear if i need this
# include: 'rules/sequence.smk'
# Some stuff here might be useful, some not
# include: 'rules/checks.smk'
# Makes alignments and actually runs the trees
include: 'rules/common.smk'
# mainly for plotting, probably not needed
# include: 'rules/analysis.smk'
include: 'rules/download_data.smk'

rule all:
    input:
        # create structures folder first
        f"{output_dir}/structs",
        # download structures, wait for it to be done
        f"{output_dir}/done.txt",

        # ✅ Filtered homologs (if needed)
        # f"{output_dir}/foldseek/results/filtered_homologs.tsv",

        # ✅ Foldmason Report
        f"{output_dir}/foldtree/foldmason_report/foldmason_alignment_3Di.html",

        # ✅ FoldTree Results
        f"{output_dir}/foldtree/foldtree_3Di_FT.nwk",
        f"{output_dir}/foldtree/fastme/foldtree_3Di_FM.nwk",
        f"{output_dir}/foldtree/foldtree_py/foldtree_3Di_FTPY.nwk",

        # IQ-TREE results for each alphabet and model
        expand(f"{output_dir}/phylogeny/iqtree/{{alphabet}}/{{model}}.nwk",
            alphabet=["aa", "3Di"],
            model=config["models"]),

        # Partitioned IQ-TREE results using comb_model from config
        expand(f"{output_dir}/phylogeny/iqtree_partitioned/{{comb_model}}.nwk",
            comb_model=config["combinations_ML"])

